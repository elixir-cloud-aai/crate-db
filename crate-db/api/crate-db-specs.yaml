openapi: "3.0.0"
info:
  title: "Crate DB Microservice"
  description: "Microservice for managing ROCrates"
  version: "1.0.0"
servers:
  - url: "http://localhost/"

paths:
  /rocrates:
    post:
      summary: Creates a new ROCrate
      description: |-
        Stores a new crate in the database and uploads the zip file to MinIO.
      operationId: createROCrate
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              x-body-name: rocrate_data
              $ref: '#/components/schemas/ROCrateRequest'
      responses:
        '201':
          $ref: '#/components/schemas/ROCrateResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Get all ROCrates
      description: |-
        Returns a list of all ROCrates stored in the database.
      operationId: listROCrates
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ROCrateResponse"
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /rocrates/{rocrate_id}:
    get:
      summary: Get a specific ROCrate by ID
      description: |-
        Returns a specific ROCrate stored in the database.
      operationId: getROCrate
      parameters:
        - $ref: '#/components/parameters/rocrate_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ROCrateResponse"
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update an existing RO-Crate
      description: |-
        Updates an existing crate in the database and uploads the zip file to MinIO.
      operationId: updateROCrate
      parameters:
        - $ref: '#/components/parameters/rocrate_id'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              x-body-name: rocrate
              $ref: '#/components/schemas/ROCrateRequest'
      responses:
        '200':
          description: Crate updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ROCrateResponse'
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


    delete:
      summary: Delete a specific ROCrate by ID
      description: |-
        Delete an existing ROCrate
      operationId: deleteROCrate
      parameters:
        - $ref: '#/components/parameters/rocrate_id'
      responses:
        '204':
          description: No Content
        '404':
          description: Resource not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    # ROCrateBase:
    #   description: The base schema for an ROCrate.
    #   type: object
    #   properties:
    #     title:
    #       type: string
    #       description: The title of the ROCrate.
    #       example: Example ROCrate
    #     description:
    #       type: string
    #       description: A description of the ROCrate.
    #       example: This is an example description of an ROCrate.
    #     zenodo_info:
    #       type: object
    #       description: Additional information for Zenodo.
    #       example:
    #         doi: 10.1234/example.doi
    #         metadata: {...}
    #   required:
    #     - title
    #     - description
        
    # ROCrateRequest:
    #   allOf:
    #     - $ref: '#/components/schemas/ROCrateBase'
    #     - type: object
    #       properties:
    #         rocrate:
    #           type: string
    #           format: binary
    #           description: The ROCrate file to upload.
    #           example: rocrate.zip
    #       required:
    #         - rocrate
              
    # ROCrateResponse:
    #   allOf:
    #     - $ref: '#/components/schemas/ROCrateBase'
    #     - type: object
    #       properties:
    #         _id:
    #           type: string
    #           description: The unique identifier for the ROCrate.
    #           example: 60b6c0f9f1d2c12a5c7d6b8e
    #         rocrate:
    #           type: string
    #           description: The link to the ROCrate file in MinIO.
    #           example: https://minio.example.com/rocrates/rocrate.zip
    #         created_at:
    #           type: string
    #           format: date-time
    #           description: The creation date of the ROCrate.
    #           example: 2023-01-01T12:00:00Z
    #         updated_at:
    #           type: string
    #           format: date-time
    #           description: The last update date of the ROCrate.
    #           example: 2023-01-02T12:00:00Z
    #         user_id:
    #           type: string
    #           description: The user ID extracted from the access token.
    #           example: 1234567890abcdef

    ROCrateRequest:
      description: The base schema for an ROCrate.
      type: object
      properties:
        rocrate:
          type: string
          format: binary
          description: The ROCrate file to upload.
          example: rocrate.zip
        description:
          type: string
          description: A description of the ROCrate.
          example: This is an example description of an ROCrate.
        title:
          type: string
          description: The title of the ROCrate.
          example: Example ROCrate
        zenodo_info:
          type: object
          description: Additional information for Zenodo.
          example:
            doi: 10.1234/example.doi
            metadata: {...}
      required:
        - rocrate
        - title
        - description

    ROCrateResponse:
      description: The base schema for an ROCrate.
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier for the ROCrate.
          example: 60b6c0f9f1d2c12a5c7d6b8e
        rocrate:
          type: string
          description: The link to the ROCrate file in MinIO.
          example: https://minio.example.com/rocrates/rocrate.zip
        created_at:
          type: string
          format: date-time
          description: The creation date of the ROCrate.
          example: 2023-01-01T12:00:00Z
        updated_at:
          type: string
          format: date-time
          description: The last update date of the ROCrate.
          example: 2023-01-02T12:00:00Z
        user_id:
          type: string
          description: The user ID extracted from the access token.
          example: 1234567890abcdef
        title:
          type: string
          description: The title of the ROCrate.
          example: Example ROCrate
        description:
          type: string
          description: A description of the ROCrate.
          example: This is an example description of an ROCrate
        zenodo_info:
          type: object
          description: Additional information for Zenodo.
          example:
            doi: 10.1234/example.doi
            metadata: {...}
      required:
        - _id
        - rocrate
        - created_at
        - updated_at
        - user_id
        - title
        - description

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  parameters:
    rocrate_id:
      name: rocrate_id
      in: path
      description: ID of the ROCrate
      required: true
      schema:
        type: string
        example: "609d4b156f6d1972e7f78c87"